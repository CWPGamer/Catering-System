choice as integer

RECORD STUDENT
	ID as string
	fName as string
	lName as string
	grade as integer
	payMethod as string
	balance as real
ENDRECORD

RECORD STAFF
	ID as string
	name as string
	jobPos as string
ENDRECORD

RECORD LUNCH
	name as string
	price as real
	availDay as string
ENDRECORD

RECORD ITEM
	name as string
	price as real
ENDRECORD

RECORD RECEIPT
	date as string
	totalPrice as real
ENDRECORD



Main Function
Start
	Repeat
		Print "Choose an option: "
		Print "1. Sign In, 0. Exit"
		Read choice

		CASE choice OF
			Case 1: call SignIn()
			Case 0: Print "Exit Successful"
		OTHERWISE
			Print "Invalid Input"
		ENDCASE
		
	Until (choice == 0)
Stop

Function SignIn()
	Declare x as integer
	Declare ID, password as string
	Repeat
		Print "1. Sign in as student/parent, 2. Sign in as canteen staff"
		Print "3. Return to Main Menu"
		Read choice

		CASE choice OF
			Case 1:
				Print "Enter ID and password"
				Read ID, password

				x = SignInStudent()
				If (x = 0) Then
					Print "Error: Invalid credentials"
				Else
					call Student()
				Endif

			Case 2: x = SignInStaff()
				If (x = 1) Then
					call Staff()
				Endif
			Case 3: return
		OTHERWISE
			Print "Invalid Input"
		ENDCASE

	Until choice == 3	
EndFunction

SubFunction SignInStudent(ID, password as string)
	StuID, StuPWord as string
	success as integer
	success <-- 0
	OPENFILE studcreds.txt FOR READ
	
	While (READFILE studcreds.txt, StuID, StuPWord <> -1) DO

		If (email == StuID AND password == StuPWord) Then
			success <-- 1
			break	
	Endwhile

	CLOSEFILE studcreds.txt
	return success
EndFunction

SubFunction SignInStaff()
	email, password as string
	StaffID, StaffPWord as string
	i, success as integer
	success <-- 0
	OPENFILE staffcreds.txt FOR READ
	
	Repeat
		While (READFILE staffcreds.txt, StaffID, StaffPWord <> -1) DO
			Print "Enter email address: "
			Read email
			Print "Enter password: "
			Read password
	
			If (email == StaffID AND password == StaffPWord) Then
				Print "Sign in successful!!"
				success <-- 12
				break
			Else
				Print "Invalid credentials. Try again."
				Print "1. Continue, 0. Exit"
				Read choice

				CASE choice OF
					Case 1: Call SignInStaff()
					Case 0: return
				OTHERWISE
					Print "Invalid Input"
				ENDCASE					
			Endif	
		Endwhile
	Until success == 1
	CLOSEFILE staffcreds.txt
	return success
EndFunction

Function Student(email as string)
	Declare studentUser as STUDENT
	Declare stu as STUDENT
	OPENFILE sturecords.txt FOR READ
	OPENFILE stuinfo.txt FOR WRITE

	While (READFILE sturecords.txt, stu <> -1) DO
		If (stu.email == email) THEN
			studentUser <-- stu
			break
		Endif
	Endwhile

	WRITEFILE stuinfo.txt, studentUser.name
	WRITEFILE stuinfo.txt, studentUser.email
	WRITEFILE stuinfo.txt, studentUser.grade
	WRITEFILE stuinfo.txt, studentUser.ID
	WRITEFILE stuinfo.txt, studentUser.payMethod
	WRITEFILE stuinfo.txt, studentUser.balance

	CLOSEFILE sturecords.txt
	CLOSEFILE stuinfo.txt

	Repeat
		Print "1. View Student Info, 2. Edit Payment Info, 3. Place Order"
		Print "4. TopUp Balance, 0. Return to Main Menu"
		Read choice

		CASE choice OF
			Case 1: call ViewOwnInfo(STUDENT studentUser)
			Case 2: call EditOwnInfo(STUDENT studentUser)
			Case 3: call PlaceOrder(STUDENT studentUser)
			Case 4: call TopUpBalance(STUDENT studentUser)
			Case 0: Print "Returning to Main Menu"
		OTHERWISE
			Print "Invalid Input"
		ENDCASE
	Until choice == 5
	return
EndFunction

SubFunction ViewOwnInfo(STUDENT studentUser)
	OPENFILE stuinfo.txt FOR READ

	READFILE stuinfo.txt, studentUser.fName
	READFILE stuinfo.txt, studentUser.lName
	READFILE stuinfo.txt, studentUser.email
	READFILE stuinfo.txt, studentUser.grade
	READFILE stuinfo.txt, studentUser.ID
	READFILE stuinfo.txt, studentUser.payMethod
	READFILE stuinfo.txt, studentUser.balance

	Print "Name: ", studentUser.fName, " ", studentUser.lName, " Email: ", studentUser.email, " Grade: ", studentUser.grade, " ID: ", studentUser.ID
	Print "Payment Method: ", studentUser.payMethod, " Current Balance: $ ", studentUser.balance
	CLOSEFILE stuinfo.txt
	return Student()
EndFunction

SubFunction EditOwnInfo(STUDENT studentUser)
	Declare accountNum as integer
	success = 0

	OPENFILE stuinfo.txt for APPEND

	Repeat
		Print "Choose Payment Method: "
		Print "1. Visa, 2. NCB Quisk, 3. Paymaster, 4. PayPal, 5. Cash (Payment at Canteen/Bursary)
		Print "6. Remove Info, 0. Return to Student Menu"
		Read choice

		CASE choice OF
			Case 1:
				Print "Enter account number: "
				Read accountNum
				studentUser.payMethod <-- "Visa"
				WRITEFILE stuinfo.txt, studentUser.payMethod

				Print "Payment Method Successfully Changed to Visa!!!"
			Case 2:
				Print "Enter account number: "
				Read accountNum
				studentUser.payMethod <-- "NCB Quisk"
				WRITEFILE stuinfo.txt, studentUser.payMethod
				
				Print "Payment Method Successfully Changed to NCB Quisk!!!"
			Case 3:
				Print "Enter account number: "
				Read accountNum
				studentUser.payMethod <-- "Paymaster"
				WRITEFILE stuinfo.txt, studentUser.payMethod
				
				Print "Payment Method Successfully Changed to Paymaster!!!"
			Case 4:
				Print "Enter account number: "
				Read accountNum
				studentUser.payMethod <-- "PayPal"
				WRITEFILE stuinfo.txt, studentUser.payMethod
				
				Print "Payment Method Successfully Changed to PayPal!!!"
			Case 5:
				studentUser.payMethod <-- "Cash"
				WRITEFILE stuinfo.txt, studentUser.payMethod
				
				Print "Payment Method Successfully Changed to Cash!!!"				
			Case 6:
				studentUser.payMethod <-- ""
				WRITEFILE stuinfo.txt, studentUser.payMethod
				Print "Payment Method Successfully Removed!!!"
			Case 0:
				success <-- 1
				Print "Returning to Student Menu"
		OTHERWISE
			Print "Invalid input: Select 1 to 5 only."
		ENDCASE
	Until success = 1
	return Student()
EndFunction

SubFunction TopUpBalance(STUDENT studentUser)
	Declare amount as real
	Declare success <-- 0

	If (studentUser.payMethod = "Cash") Then
		Print "Warning: Cash users may not utilize the online balance. Switch to online payment to use the balance."
		call Student()
	Endif

	Repeat
		Print "Select the amount you want to top up: "
		Print "1. 500, 2. 1000, 3. 2000, 4. 5000, 0. Return to Student Menu"
		Read choice

		CASE choice OF
			Case 1: amount <-- 500.0
			Case 2: amount <-- 1000.0
			Case 3: amount <-- 2000.0
			Case 4: amount <-- 5000.0
			Case 0:
				success <-- 1
				Print "Returning to Student Menu"
				call Student()
		OTHERWISE
			Print "Invalid input: Select 1 to 4 only"
		ENDCASE

		Print "Choose Method of Payment"
		Print "1. Visa, 2. NCB Quisk, 3. Paymaster, 4. PayPal"

		CASE choice OF
			Case 1:
				Print "Enter PIN number: "
				Read choice

				studentUser.balance = studentUser.balance + amount

				Print "Transaction Successful!!!"
				Print "Payment Method: Visa"
				Print "Amount Tendered: $ ", amount
				Print "Current Balance: $ ", studentUser.Balance
			Case 2:
				Print "Enter phone number: "
				Read choice

				studentUser.balance = studentUser.balance + amount

				Print "Transaction Successful!!!"
				Print "Payment Method: NCB Quisk"
				Print "Amount Tendered: $ ", amount
				Print "Current Balance: $ ", studentUser.Balance
			Case 3:
				Print "Enter PIN number: "
				Read choice

				studentUser.balance = studentUser.balance + amount

				Print "Transaction Successful!!!"
				Print "Payment Method: Paymaster"
				Print "Amount Tendered: $ ", amount
				Print "Current Balance: $ ", studentUser.Balance
			Case 4:
				Print "Enter PIN number: "
				Read choice

				studentUser.balance = studentUser.balance + amount

				Print "Transaction Successful!!!"
				Print "Payment Method: PayPal"
				Print "Amount Tendered: $ ", amount
				Print "Current Balance: $ ", studentUser.Balance
		OTHERWISE
			Print "Invalid input: Select 1 to 4 only"
		ENDCASE
	Until success == 1

EndFunction

Function PlaceOrder(STUDENT studentUser)
	Declare c as character
	Declare itemName, day, availDay as string
	Declare price as real
	Declare success = 0
	Declare lunchNum = 0
	Declare i = 0
	Declare totalPrice = 0.0
	Declare lunches: ARRAY[0:2] of LUNCH
	Declare receiptInfo of RECEIPT
	Declare receiptName as string

	receiptName = studentUser.name + " receipt.txt"
	OPENFILE Lunch Menu.txt FOR READ
	
	OPENFILE receiptName FOR APPEND

	WRITEFILE receiptName, "Name: ", studentUser.name
	WRITEFILE receiptName, "ID #: ", studentUser.ID
	WRITEFILE receiptName, receiptInfo.date

	Repeat
		While (READFILE Lunch Menu.txt, c <> -1) DO
			Print c
		Endwhile

		Print "1. Monday, 2. Tuesday, 3. Wednesday, 4. Thursday, 5. Friday"
		Print "6. Finish Order, 0. Exit"
		Read choice

		CASE choice OF
			Case 1: day <-- "Monday"
			Case 2: day <-- "Tuesday"
			Case 3: day <-- "Wednesday"
			Case 4: day <-- "Thursday"
			Case 5: day <-- "Friday
			Case 6:
				success <-- 1
				WRITEFILE receipt.text, "Total Amount: $ ", receiptInfo.totalPrice
			Case 0: return
		OTHERWISE
			Print "Invalid input: Select 1 to 6 only"
		ENDCASE


		CASE choice OF
			Case 1 to 5:
				WRITEFILE receipt.txt, day
				Repeat
					Print "1. Box Lunches, 2. Patties, 3. Pastries, 4. Beverages, 5. Return to Cafeteria Menu"
					Read choice
					CASE choice OF
						Case 1:
							OPENFILE Weekly Menu.txt FOR READ
							Print day, " Lunch Menu"
							While (READFILE Weekly Menu.txt, itemName, price, availDay <> -1) DO
								lunchNum = lunchNum + 1
								IF (availDay == day) THEN
									lunches[i].name <-- itemName
									lunches[i].price <-- price
									lunches[i].availDay <-- availDay
									Print lunchNum, " ", lunches[i].name, " $", lunches[i].price
									i = i + 1
								Endif						
							Endwhile					
							Read choice
							CASE choice OF
								Case 1:
									WRITEFILE receipt.txt, lunches[0].name, " $", lunches[0].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + lunches[0].price
								Case 2:
									WRITEFILE receipt.txt, lunches[1].name, " $", lunches[1].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + lunches[1].price
								Case 3:
									WRITEFILE receipt.txt, lunches[2].name, " $", lunches[2].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + lunches[2].price
							OTHERWISE
								Print "Invalid input. Select 1 to 3 only."
							ENDCASE
							CLOSEFILE Weekly Menu.txt
						Case 2:
							OPENFILE Patties Menu.txt FOR READ
							Declare patties: Array[0:5] of ITEM
							While (READFILE Patties Menu.txt, patties[i].name, patties[i].price <> -1) DO
								lunchNum = lunchNum + 1
								Print lunchNum, " ", patties[i].name, " ", patties.price
							Endwhile
							Read choice
							CASE choice OF
								Case 1:
									WRITEFILE receipt.txt, patties[0].name, patties[0].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + patties[0].price
								Case 2:
									WRITEFILE receipt.txt, patties[1].name, patties[1].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + patties[1].price
								Case 3:
									WRITEFILE receipt.txt, patties[2].name, patties[2].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + patties[2].price
								Case 4:
									WRITEFILE receipt.txt, patties[3].name, patties[3].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + patties[3].price
								Case 5:
									WRITEFILE receipt.txt, patties[4].name, patties[4].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + patties[4].price
								Case 6:
									WRITEFILE receipt.txt, patties[5].name, patties[5].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + patties[5].price
							OTHERWISE
								Print "Invalid Input: Select 1 to 6 only"																			
							ENDCASE
							CLOSE Patties Menu.txt
						Case 3:
							OPENFILE Pastries Menu.txt FOR READ
							Declare pastries: Array[0:4] of ITEM
							While (READFILE Pastries Menu.txt, pastries[i].name, pastries[i].price <> -1) DO
								lunchNum = lunchNum + 1
								Print lunchNum, " ", pastries[i].name, " ", pastries.price
							Endwhile
							Read choice
							CASE choice OF
								Case 1:
									WRITEFILE receipt.txt, pastries[0].name, pastries[0].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + pastries[0].price
								Case 2:
									WRITEFILE receipt.txt, pastries[1].name, pastries[1].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + pastries[1].price
								Case 3:
									WRITEFILE receipt.txt, pastries[2].name, pastries[2].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + pastries[2].price
								Case 4:
									WRITEFILE receipt.txt, pastries[3].name, pastries[3].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + pastries[3].price
								Case 5:
									WRITEFILE receipt.txt, pastries[4].name, pastries[4].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + pastries[4].price
							OTHERWISE
								Print "Invalid Input: Select 1 to 5 only"																			
							ENDCASE
							CLOSE Pastries Menu.txt
						Case 4:
							OPENFILE Beverage Menu.txt FOR READ
							Declare beverages: Array[0:6] of ITEM
							While (READFILE Beverage Menu.txt, beverages[i].name, beverages[i].price <> -1) DO
								lunchNum = lunchNum + 1
								Print lunchNum, " ", beverages[i].name, " ", beverages.price
							Endwhile
							Read choice
							CASE choice OF
								Case 1:
									WRITEFILE receipt.txt, beverages[0].name, beverages[0].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + beverages[0].price
								Case 2:
									WRITEFILE receipt.txt, beverages[1].name, beverages[1].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + beverages[1].price
								Case 3:
									WRITEFILE receipt.txt, beverages[2].name, beverages[2].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + beverages[2].price
								Case 4:
									WRITEFILE receipt.txt, beverages[3].name, beverages[3].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + beverages[3].price
								Case 5:
									WRITEFILE receipt.txt, beverages[4].name, beverages[4].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + beverages[4].price
								Case 6:
									WRITEFILE receipt.txt, beverages[5].name, beverages[5].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + beverages[5].price
								Case 7:
									WRITEFILE receipt.txt, beverages[6].name, beverages[6].price
									receiptInfo.totalPrice = receiptInfo.totalPrice + beverages[6].price								
							OTHERWISE
								Print "Invalid Input: Select 1 to 7 only"																			
							ENDCASE
							CLOSE Beverage Menu.txt
						Case 5: break								
					ENDCASE
				Until choice == 5
		ENDCASE
		lunchNum <-- 0
		i <-- 0
	Until success == 1

	CLOSEFILE Lunch Menu.txt
	CLOSEFILE receiptName
	Call Payment(RECEIPT receiptInfo)	
EndFunction

SubFunction Payment(RECEIPT receiptInfo)
	Declare c as character
	OPENFILE receipt.txt FOR APPEND and READ

	While (READFILE receipt.txt, c <> -1) DO
		Print c
	Endwhile

	Print "Current Balance: $ ", studentUser.balance
	Print "Choose Method of Payment"
	Print "1. Pay via Balance 2. Cash (Pay at Canteen or Bursary Office at a later date)"
	Read choice

	Case choice OF
		Case 1:
			IF (studentUser.balance < receiptInfo.totalPrice) THEN
				Print "Insufficient Funds: Please top up balance at Student Menu."
			Else
				WRITEFILE receipt.txt, "Amount Tendered: $", receiptInfo.totalPrice
				studentUser.balance = studentUser.balance - receiptInfo.totalPrice

				Print "Transaction Successful. Printing Receipt..."
			Endif
		Case 2:
			WRITEFILE receipt.txt, "Amount Tendered: $", receiptInfo.totalPrice, " (On Credit)"
			Print "Transaction Successful. Printing Receipt..."
	OTHERWISE
		Print "Invalid input: Select 1 to 2 only."
	ENDCASE

	CLOSEFILE receipt.txt
	Call PrintCheck(receiptInfo)
EndFunction

SubFunction PrintCheck(RECEIPT receiptInfo)
	Declare c as character
	OPENFILE receipt.txt FOR READ

	While (READFILE receipt.txt, c <> -1) DO
		Print c
	Endwhile
	return Student()
EndFunction

Function Staff()
	Repeat
		Print "1. View Student Database, 2. Search Student Record"
		Print "0. Return to Main Menu"
		Read choice

		Case choice OF
			Case 1: call ViewStuDatabase()
			Case 2: call ViewLunchInfo()
			Case 3: call ViewLunchOrders()
			Case 0: "Returning to Main Menu"
		OTHERWISE
			Print "Invalid Input"
		ENDCASE
	Until choice = 0
	return
EndFunction

SubFunction ViewStuDatabase()
	Declare stu as STUDENT
	OPENFILE sturecords.txt FOR READ

	Print "Name			Email  			Grade  		ID"
	While (READFILE sturecords.txt, stu.name, stu.email, stu.grade, stu.ID, stu.payMethod, stu.balance <> -1) DO
		Print stu.name, stu.email, stu.grade, stu.ID
	Endwhile
	CLOSEFILE sturecords.txt
EndFunction